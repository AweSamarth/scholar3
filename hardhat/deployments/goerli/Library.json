{
  "address": "0x401BD2C77B851777d76CF398048F2427ad36c404",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Incorrect__EthAmount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "theAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "bookCid",
          "type": "string"
        }
      ],
      "name": "BookUploaded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "theAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "theName",
          "type": "string"
        }
      ],
      "name": "ProfileCreated",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "cid",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "cover",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "thePrice",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "theDescription",
          "type": "string"
        }
      ],
      "name": "addBook",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "theCid",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        }
      ],
      "name": "buyBook",
      "outputs": [
        {
          "internalType": "string",
          "name": "cidLelo",
          "type": "string"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "somevalue",
          "type": "uint256"
        }
      ],
      "name": "ethPriceReturner",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "theName",
          "type": "string"
        }
      ],
      "name": "newAuthor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "viewAllAuthors",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "theAddress",
          "type": "address"
        }
      ],
      "name": "viewAuthor",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "joinDate",
              "type": "uint256"
            },
            {
              "internalType": "string[]",
              "name": "bookCidArray",
              "type": "string[]"
            }
          ],
          "internalType": "struct Library.Author",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "theAddress",
          "type": "address"
        }
      ],
      "name": "viewAuthorBooks",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "cid",
          "type": "string"
        }
      ],
      "name": "viewBook",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "theAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "uploadDate",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "bookCid",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "coverCid",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "priceInEth",
              "type": "uint256"
            }
          ],
          "internalType": "struct Library.Book",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x59e7b173fe4d1f06db16d21775aa697984fe17d79c2ea29e948554891c819f4e",
  "receipt": {
    "to": null,
    "from": "0xCDF770392F1E5E61725Cc9522c80070134D50eC7",
    "contractAddress": "0x401BD2C77B851777d76CF398048F2427ad36c404",
    "transactionIndex": 63,
    "gasUsed": "1754430",
    "logsBloom": "0x
    "blockHash": "0x4f1bdb03fe6a9194a1c4987a28446b517cb440c6a64386274f9ba5b684578374",
    "transactionHash": "0x59e7b173fe4d1f06db16d21775aa697984fe17d79c2ea29e948554891c819f4e",
    "logs": [],
    "blockNumber": 8512867,
    "cumulativeGasUsed": "15954895",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 3,
  "solcInputHash": "5fa4560ce7b117042e9b61c557becf2c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Incorrect__EthAmount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"theAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"bookCid\",\"type\":\"string\"}],\"name\":\"BookUploaded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"theAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"theName\",\"type\":\"string\"}],\"name\":\"ProfileCreated\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cid\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cover\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"thePrice\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"theDescription\",\"type\":\"string\"}],\"name\":\"addBook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"theCid\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"}],\"name\":\"buyBook\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"cidLelo\",\"type\":\"string\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"somevalue\",\"type\":\"uint256\"}],\"name\":\"ethPriceReturner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"theName\",\"type\":\"string\"}],\"name\":\"newAuthor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewAllAuthors\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"theAddress\",\"type\":\"address\"}],\"name\":\"viewAuthor\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"joinDate\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"bookCidArray\",\"type\":\"string[]\"}],\"internalType\":\"struct Library.Author\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"theAddress\",\"type\":\"address\"}],\"name\":\"viewAuthorBooks\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"cid\",\"type\":\"string\"}],\"name\":\"viewBook\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"theAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"uploadDate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"bookCid\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"coverCid\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"priceInEth\",\"type\":\"uint256\"}],\"internalType\":\"struct Library.Book\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Library.sol\":\"Library\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/Library.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.18;\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\n\\r\\n\\r\\nerror Incorrect__EthAmount();\\r\\n\\r\\n\\r\\ncontract Library{\\r\\n    AggregatorV3Interface private s_priceFeed;\\r\\n\\r\\n    address [] allAuthors;\\r\\n\\r\\n    constructor() {\\r\\n        s_priceFeed = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e);\\r\\n    }\\r\\n\\r\\n    using PriceConverter for uint256;\\r\\n\\r\\n    event ProfileCreated(address indexed theAddress, string theName);\\r\\n    event BookUploaded(address indexed theAddress, string bookCid );\\r\\n\\r\\n    struct Author{\\r\\n        string name;\\r\\n        uint256 joinDate;\\r\\n        string[] bookCidArray;\\r\\n    }\\r\\n\\r\\n    struct Book{\\r\\n        address theAddress;\\r\\n        string title;\\r\\n        string description;\\r\\n        uint256 uploadDate;\\r\\n        string bookCid;\\r\\n        string coverCid;\\r\\n        uint256 priceInEth;\\r\\n\\r\\n    }\\r\\n\\r\\n    mapping (address=>Author) authorMapping;\\r\\n    mapping (string=>Book) bookMapping;\\r\\n\\r\\n\\r\\n    function newAuthor(string memory theName) public {\\r\\n        authorMapping[msg.sender].name= theName;\\r\\n        authorMapping[msg.sender].joinDate= block.timestamp;\\r\\n        allAuthors.push(msg.sender);\\r\\n        emit ProfileCreated(msg.sender, theName);\\r\\n    }\\r\\n\\r\\n    function viewAuthor(address  theAddress) public view returns(Author memory){\\r\\n        return authorMapping[theAddress];\\r\\n    }\\r\\n\\r\\n    function addBook (string memory _title, string memory cid, string memory cover, uint256 thePrice, string memory theDescription) public {\\r\\n        uint256 _ethPrice = thePrice.getConversionRate(s_priceFeed);\\r\\n        Book memory temp = Book({title:_title, uploadDate:block.timestamp, bookCid:cid, theAddress: msg.sender, coverCid:cover, priceInEth:_ethPrice, description:theDescription });\\r\\n        authorMapping[msg.sender].bookCidArray.push(cid);\\r\\n        bookMapping[cid] = temp;\\r\\n        emit BookUploaded(msg.sender, cid);\\r\\n\\r\\n    }\\r\\n    function viewBook(string memory cid) public view returns(Book memory){\\r\\n        return bookMapping[cid];\\r\\n    }\\r\\n\\r\\n    function viewAuthorBooks(address theAddress) public view returns(string[] memory){\\r\\n        return authorMapping[theAddress].bookCidArray;\\r\\n    }\\r\\n\\r\\n    function getTime() public view returns(uint256){\\r\\n        return block.timestamp;\\r\\n    }\\r\\n\\r\\n    function ethPriceReturner(uint256 somevalue) public view returns(uint256){\\r\\n        return somevalue.getConversionRate(s_priceFeed);\\r\\n    }\\r\\n\\r\\n    function buyBook(string memory theCid, uint256 cost) public payable returns(string memory cidLelo){\\r\\n\\r\\n        address payable authorAddress = payable(bookMapping[theCid].theAddress);\\r\\n        if(msg.value<cost){\\r\\n            revert Incorrect__EthAmount();\\r\\n        }\\r\\n        (bool sent, ) = authorAddress.call{value:cost}(\\\"\\\");\\r\\n        require(sent, \\\"correct amount of ether not sent\\\");\\r\\n\\r\\n        return theCid;\\r\\n\\r\\n\\r\\n    }\\r\\n        function getPriceFeed() public view returns (AggregatorV3Interface) {\\r\\n        return s_priceFeed;\\r\\n    }\\r\\n\\r\\n    function viewAllAuthors () public view returns (address [] memory){\\r\\n        return allAuthors;\\r\\n    }\\r\\n\\r\\n    receive() external payable{}\\r\\n    fallback() external payable{}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n}\\r\\n\\r\\n\",\"keccak256\":\"0xa1853663a4505f755e32f9f2297b9cb999a754a08855d1c2ef2612056078b5bd\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n\\r\\n\\r\\n  // function getPrice(AggregatorV3Interface priceFeed)\\r\\n  //   internal\\r\\n  //   view\\r\\n  //   returns (uint256)\\r\\n  // {\\r\\n  //   (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n  //   // ETH/USD rate in 18 digit\\r\\n  //   return uint256(answer * 10000000000);\\r\\n  // }\\r\\n  function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint) {\\r\\n    (, int price,,,) = priceFeed.latestRoundData();\\r\\n    uint adjust_price = uint(price) * 1e10;\\r\\n    uint usd = 1*1e18;\\r\\n    uint rate = (usd * 1e18) / adjust_price;\\r\\n    return rate;\\r\\n    }\\r\\n\\r\\n  // 1000000000\\r\\n  // call it get fiatConversionRate, since it assumes something about decimals\\r\\n  // It wouldn't work for every aggregator\\r\\n\\r\\n\\r\\n\\r\\n  function getConversionRate(uint256 usdAmount, AggregatorV3Interface priceFeed)\\r\\n    internal\\r\\n    view\\r\\n    returns (uint256)\\r\\n  {\\r\\n    uint256 usdPrice = getPrice(priceFeed);\\r\\n    uint256 usdAmountIntEth = (usdPrice * usdAmount);\\r\\n    // the actual USD/ETH conversation rate, after adjusting the extra 0s.\\r\\n    return usdAmountIntEth;\\r\\n  }\\r\\n}\",\"keccak256\":\"0x2fcdeaa95871dd2d970a2287378c7313cf6d462776c20b6780462efe17830020\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5073d4a33860578de61dbabdc8bfdb98fd742fa7028e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611e66806100746000396000f3fe6080604052600436106100955760003560e01c80636ee661a3116100595780636ee661a31461018a57806375735f6a146101c75780639e87a5cd14610204578063c00ec7f91461022f578063f68baded1461026c5761009c565b80630e05cdbf1461009e5780632bbf17ad146100ce578063557ed1ba146100f9578063563f744d146101245780636d868042146101615761009c565b3661009c57005b005b6100b860048036038101906100b39190611102565b610295565b6040516100c591906111dd565b60405180910390f35b3480156100da57600080fd5b506100e36103ce565b6040516100f091906112ef565b60405180910390f35b34801561010557600080fd5b5061010e61045c565b60405161011b9190611320565b60405180910390f35b34801561013057600080fd5b5061014b60048036038101906101469190611367565b610464565b6040516101589190611506565b60405180910390f35b34801561016d57600080fd5b5061018860048036038101906101839190611528565b610632565b005b34801561019657600080fd5b506101b160048036038101906101ac9190611571565b61077d565b6040516101be9190611320565b60405180910390f35b3480156101d357600080fd5b506101ee60048036038101906101e99190611528565b6107b9565b6040516101fb919061164f565b60405180910390f35b34801561021057600080fd5b50610219610aa3565b60405161022691906116d0565b60405180910390f35b34801561023b57600080fd5b5061025660048036038101906102519190611367565b610acc565b6040516102639190611771565b60405180910390f35b34801561027857600080fd5b50610293600480360381019061028e9190611793565b610be7565b005b606060006003846040516102a991906118ba565b908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082341015610317576040517f213529b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff168460405161033d90611902565b60006040518083038185875af1925050503d806000811461037a576040519150601f19603f3d011682016040523d82523d6000602084013e61037f565b606091505b50509050806103c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ba90611963565b60405180910390fd5b849250505092915050565b6060600180548060200260200160405190810160405280929190818152602001828054801561045257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610408575b5050505050905090565b600042905090565b61046c610efe565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820180546104c6906119b2565b80601f01602080910402602001604051908101604052809291908181526020018280546104f2906119b2565b801561053f5780601f106105145761010080835404028352916020019161053f565b820191906000526020600020905b81548152906001019060200180831161052257829003601f168201915b505050505081526020016001820154815260200160028201805480602002602001604051908101604052809291908181526020016000905b82821015610623578382906000526020600020018054610596906119b2565b80601f01602080910402602001604051908101604052809291908181526020018280546105c2906119b2565b801561060f5780601f106105e45761010080835404028352916020019161060f565b820191906000526020600020905b8154815290600101906020018083116105f257829003601f168201915b505050505081526020019060010190610577565b50505050815250509050919050565b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000190816106819190611b85565b5042600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fbafddecbd1dec1c1afb76d693f1de16901f521bdf29a02438e3e6806c0b8d9488260405161077291906111dd565b60405180910390a250565b60006107b260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683610e0c90919063ffffffff16565b9050919050565b6107c1610f1f565b6003826040516107d191906118ba565b90815260200160405180910390206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054610850906119b2565b80601f016020809104026020016040519081016040528092919081815260200182805461087c906119b2565b80156108c95780601f1061089e576101008083540402835291602001916108c9565b820191906000526020600020905b8154815290600101906020018083116108ac57829003601f168201915b505050505081526020016002820180546108e2906119b2565b80601f016020809104026020016040519081016040528092919081815260200182805461090e906119b2565b801561095b5780601f106109305761010080835404028352916020019161095b565b820191906000526020600020905b81548152906001019060200180831161093e57829003601f168201915b505050505081526020016003820154815260200160048201805461097e906119b2565b80601f01602080910402602001604051908101604052809291908181526020018280546109aa906119b2565b80156109f75780601f106109cc576101008083540402835291602001916109f7565b820191906000526020600020905b8154815290600101906020018083116109da57829003601f168201915b50505050508152602001600582018054610a10906119b2565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3c906119b2565b8015610a895780601f10610a5e57610100808354040283529160200191610a89565b820191906000526020600020905b815481529060010190602001808311610a6c57829003601f168201915b505050505081526020016006820154815250509050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201805480602002602001604051908101604052809291908181526020016000905b82821015610bdc578382906000526020600020018054610b4f906119b2565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7b906119b2565b8015610bc85780601f10610b9d57610100808354040283529160200191610bc8565b820191906000526020600020905b815481529060010190602001808311610bab57829003601f168201915b505050505081526020019060010190610b30565b505050509050919050565b6000610c1c60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684610e0c90919063ffffffff16565b905060006040518060e001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001888152602001848152602001428152602001878152602001868152602001838152509050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020186908060018154018082558091505060019003906000526020600020016000909190919091509081610cdf9190611b85565b5080600387604051610cf191906118ba565b908152602001604051809103902060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019081610d5b9190611b85565b506040820151816002019081610d719190611b85565b50606082015181600301556080820151816004019081610d919190611b85565b5060a0820151816005019081610da79190611b85565b5060c082015181600601559050503373ffffffffffffffffffffffffffffffffffffffff167f278db38b8449235c100ad914cc7629b274142c02919c07fb67877245f7f7473c87604051610dfb91906111dd565b60405180910390a250505050505050565b600080610e1883610e35565b905060008482610e289190611c86565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610e83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea79190611d55565b50505091505060006402540be40082610ec09190611c86565b90506000670de0b6b3a76400009050600082670de0b6b3a764000083610ee69190611c86565b610ef09190611dff565b905080945050505050919050565b60405180606001604052806060815260200160008152602001606081525090565b6040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600081526020016060815260200160608152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610fd982610f90565b810181811067ffffffffffffffff82111715610ff857610ff7610fa1565b5b80604052505050565b600061100b610f72565b90506110178282610fd0565b919050565b600067ffffffffffffffff82111561103757611036610fa1565b5b61104082610f90565b9050602081019050919050565b82818337600083830152505050565b600061106f61106a8461101c565b611001565b90508281526020810184848401111561108b5761108a610f8b565b5b61109684828561104d565b509392505050565b600082601f8301126110b3576110b2610f86565b5b81356110c384826020860161105c565b91505092915050565b6000819050919050565b6110df816110cc565b81146110ea57600080fd5b50565b6000813590506110fc816110d6565b92915050565b6000806040838503121561111957611118610f7c565b5b600083013567ffffffffffffffff81111561113757611136610f81565b5b6111438582860161109e565b9250506020611154858286016110ed565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561119857808201518184015260208101905061117d565b60008484015250505050565b60006111af8261115e565b6111b98185611169565b93506111c981856020860161117a565b6111d281610f90565b840191505092915050565b600060208201905081810360008301526111f781846111a4565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112568261122b565b9050919050565b6112668161124b565b82525050565b6000611278838361125d565b60208301905092915050565b6000602082019050919050565b600061129c826111ff565b6112a6818561120a565b93506112b18361121b565b8060005b838110156112e25781516112c9888261126c565b97506112d483611284565b9250506001810190506112b5565b5085935050505092915050565b600060208201905081810360008301526113098184611291565b905092915050565b61131a816110cc565b82525050565b60006020820190506113356000830184611311565b92915050565b6113448161124b565b811461134f57600080fd5b50565b6000813590506113618161133b565b92915050565b60006020828403121561137d5761137c610f7c565b5b600061138b84828501611352565b91505092915050565b600082825260208201905092915050565b60006113b08261115e565b6113ba8185611394565b93506113ca81856020860161117a565b6113d381610f90565b840191505092915050565b6113e7816110cc565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061142583836113a5565b905092915050565b6000602082019050919050565b6000611445826113ed565b61144f81856113f8565b93508360208202850161146185611409565b8060005b8581101561149d578484038952815161147e8582611419565b94506114898361142d565b925060208a01995050600181019050611465565b50829750879550505050505092915050565b600060608301600083015184820360008601526114cc82826113a5565b91505060208301516114e160208601826113de565b50604083015184820360408601526114f9828261143a565b9150508091505092915050565b6000602082019050818103600083015261152081846114af565b905092915050565b60006020828403121561153e5761153d610f7c565b5b600082013567ffffffffffffffff81111561155c5761155b610f81565b5b6115688482850161109e565b91505092915050565b60006020828403121561158757611586610f7c565b5b6000611595848285016110ed565b91505092915050565b600060e0830160008301516115b6600086018261125d565b50602083015184820360208601526115ce82826113a5565b915050604083015184820360408601526115e882826113a5565b91505060608301516115fd60608601826113de565b506080830151848203608086015261161582826113a5565b91505060a083015184820360a086015261162f82826113a5565b91505060c083015161164460c08601826113de565b508091505092915050565b60006020820190508181036000830152611669818461159e565b905092915050565b6000819050919050565b600061169661169161168c8461122b565b611671565b61122b565b9050919050565b60006116a88261167b565b9050919050565b60006116ba8261169d565b9050919050565b6116ca816116af565b82525050565b60006020820190506116e560008301846116c1565b92915050565b600082825260208201905092915050565b6000611707826113ed565b61171181856116eb565b93508360208202850161172385611409565b8060005b8581101561175f57848403895281516117408582611419565b945061174b8361142d565b925060208a01995050600181019050611727565b50829750879550505050505092915050565b6000602082019050818103600083015261178b81846116fc565b905092915050565b600080600080600060a086880312156117af576117ae610f7c565b5b600086013567ffffffffffffffff8111156117cd576117cc610f81565b5b6117d98882890161109e565b955050602086013567ffffffffffffffff8111156117fa576117f9610f81565b5b6118068882890161109e565b945050604086013567ffffffffffffffff81111561182757611826610f81565b5b6118338882890161109e565b9350506060611844888289016110ed565b925050608086013567ffffffffffffffff81111561186557611864610f81565b5b6118718882890161109e565b9150509295509295909350565b600081905092915050565b60006118948261115e565b61189e818561187e565b93506118ae81856020860161117a565b80840191505092915050565b60006118c68284611889565b915081905092915050565b600081905092915050565b50565b60006118ec6000836118d1565b91506118f7826118dc565b600082019050919050565b600061190d826118df565b9150819050919050565b7f636f727265637420616d6f756e74206f66206574686572206e6f742073656e74600082015250565b600061194d602083611169565b915061195882611917565b602082019050919050565b6000602082019050818103600083015261197c81611940565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806119ca57607f821691505b6020821081036119dd576119dc611983565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611a457fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611a08565b611a4f8683611a08565b95508019841693508086168417925050509392505050565b6000611a82611a7d611a78846110cc565b611671565b6110cc565b9050919050565b6000819050919050565b611a9c83611a67565b611ab0611aa882611a89565b848454611a15565b825550505050565b600090565b611ac5611ab8565b611ad0818484611a93565b505050565b5b81811015611af457611ae9600082611abd565b600181019050611ad6565b5050565b601f821115611b3957611b0a816119e3565b611b13846119f8565b81016020851015611b22578190505b611b36611b2e856119f8565b830182611ad5565b50505b505050565b600082821c905092915050565b6000611b5c60001984600802611b3e565b1980831691505092915050565b6000611b758383611b4b565b9150826002028217905092915050565b611b8e8261115e565b67ffffffffffffffff811115611ba757611ba6610fa1565b5b611bb182546119b2565b611bbc828285611af8565b600060209050601f831160018114611bef5760008415611bdd578287015190505b611be78582611b69565b865550611c4f565b601f198416611bfd866119e3565b60005b82811015611c2557848901518255600182019150602085019450602081019050611c00565b86831015611c425784890151611c3e601f891682611b4b565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c91826110cc565b9150611c9c836110cc565b9250828202611caa816110cc565b91508282048414831517611cc157611cc0611c57565b5b5092915050565b600069ffffffffffffffffffff82169050919050565b611ce781611cc8565b8114611cf257600080fd5b50565b600081519050611d0481611cde565b92915050565b6000819050919050565b611d1d81611d0a565b8114611d2857600080fd5b50565b600081519050611d3a81611d14565b92915050565b600081519050611d4f816110d6565b92915050565b600080600080600060a08688031215611d7157611d70610f7c565b5b6000611d7f88828901611cf5565b9550506020611d9088828901611d2b565b9450506040611da188828901611d40565b9350506060611db288828901611d40565b9250506080611dc388828901611cf5565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611e0a826110cc565b9150611e15836110cc565b925082611e2557611e24611dd0565b5b82820490509291505056fea264697066735822122034ffd14d18a1c3aea668ce0254f6d09e72d25dec4c5c674e92ea987668dd6ef564736f6c63430008120033",
  "deployedBytecode": "0x6080604052600436106100955760003560e01c80636ee661a3116100595780636ee661a31461018a57806375735f6a146101c75780639e87a5cd14610204578063c00ec7f91461022f578063f68baded1461026c5761009c565b80630e05cdbf1461009e5780632bbf17ad146100ce578063557ed1ba146100f9578063563f744d146101245780636d868042146101615761009c565b3661009c57005b005b6100b860048036038101906100b39190611102565b610295565b6040516100c591906111dd565b60405180910390f35b3480156100da57600080fd5b506100e36103ce565b6040516100f091906112ef565b60405180910390f35b34801561010557600080fd5b5061010e61045c565b60405161011b9190611320565b60405180910390f35b34801561013057600080fd5b5061014b60048036038101906101469190611367565b610464565b6040516101589190611506565b60405180910390f35b34801561016d57600080fd5b5061018860048036038101906101839190611528565b610632565b005b34801561019657600080fd5b506101b160048036038101906101ac9190611571565b61077d565b6040516101be9190611320565b60405180910390f35b3480156101d357600080fd5b506101ee60048036038101906101e99190611528565b6107b9565b6040516101fb919061164f565b60405180910390f35b34801561021057600080fd5b50610219610aa3565b60405161022691906116d0565b60405180910390f35b34801561023b57600080fd5b5061025660048036038101906102519190611367565b610acc565b6040516102639190611771565b60405180910390f35b34801561027857600080fd5b50610293600480360381019061028e9190611793565b610be7565b005b606060006003846040516102a991906118ba565b908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082341015610317576040517f213529b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff168460405161033d90611902565b60006040518083038185875af1925050503d806000811461037a576040519150601f19603f3d011682016040523d82523d6000602084013e61037f565b606091505b50509050806103c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ba90611963565b60405180910390fd5b849250505092915050565b6060600180548060200260200160405190810160405280929190818152602001828054801561045257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610408575b5050505050905090565b600042905090565b61046c610efe565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820180546104c6906119b2565b80601f01602080910402602001604051908101604052809291908181526020018280546104f2906119b2565b801561053f5780601f106105145761010080835404028352916020019161053f565b820191906000526020600020905b81548152906001019060200180831161052257829003601f168201915b505050505081526020016001820154815260200160028201805480602002602001604051908101604052809291908181526020016000905b82821015610623578382906000526020600020018054610596906119b2565b80601f01602080910402602001604051908101604052809291908181526020018280546105c2906119b2565b801561060f5780601f106105e45761010080835404028352916020019161060f565b820191906000526020600020905b8154815290600101906020018083116105f257829003601f168201915b505050505081526020019060010190610577565b50505050815250509050919050565b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000190816106819190611b85565b5042600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fbafddecbd1dec1c1afb76d693f1de16901f521bdf29a02438e3e6806c0b8d9488260405161077291906111dd565b60405180910390a250565b60006107b260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683610e0c90919063ffffffff16565b9050919050565b6107c1610f1f565b6003826040516107d191906118ba565b90815260200160405180910390206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054610850906119b2565b80601f016020809104026020016040519081016040528092919081815260200182805461087c906119b2565b80156108c95780601f1061089e576101008083540402835291602001916108c9565b820191906000526020600020905b8154815290600101906020018083116108ac57829003601f168201915b505050505081526020016002820180546108e2906119b2565b80601f016020809104026020016040519081016040528092919081815260200182805461090e906119b2565b801561095b5780601f106109305761010080835404028352916020019161095b565b820191906000526020600020905b81548152906001019060200180831161093e57829003601f168201915b505050505081526020016003820154815260200160048201805461097e906119b2565b80601f01602080910402602001604051908101604052809291908181526020018280546109aa906119b2565b80156109f75780601f106109cc576101008083540402835291602001916109f7565b820191906000526020600020905b8154815290600101906020018083116109da57829003601f168201915b50505050508152602001600582018054610a10906119b2565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3c906119b2565b8015610a895780601f10610a5e57610100808354040283529160200191610a89565b820191906000526020600020905b815481529060010190602001808311610a6c57829003601f168201915b505050505081526020016006820154815250509050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201805480602002602001604051908101604052809291908181526020016000905b82821015610bdc578382906000526020600020018054610b4f906119b2565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7b906119b2565b8015610bc85780601f10610b9d57610100808354040283529160200191610bc8565b820191906000526020600020905b815481529060010190602001808311610bab57829003601f168201915b505050505081526020019060010190610b30565b505050509050919050565b6000610c1c60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684610e0c90919063ffffffff16565b905060006040518060e001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001888152602001848152602001428152602001878152602001868152602001838152509050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020186908060018154018082558091505060019003906000526020600020016000909190919091509081610cdf9190611b85565b5080600387604051610cf191906118ba565b908152602001604051809103902060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019081610d5b9190611b85565b506040820151816002019081610d719190611b85565b50606082015181600301556080820151816004019081610d919190611b85565b5060a0820151816005019081610da79190611b85565b5060c082015181600601559050503373ffffffffffffffffffffffffffffffffffffffff167f278db38b8449235c100ad914cc7629b274142c02919c07fb67877245f7f7473c87604051610dfb91906111dd565b60405180910390a250505050505050565b600080610e1883610e35565b905060008482610e289190611c86565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610e83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea79190611d55565b50505091505060006402540be40082610ec09190611c86565b90506000670de0b6b3a76400009050600082670de0b6b3a764000083610ee69190611c86565b610ef09190611dff565b905080945050505050919050565b60405180606001604052806060815260200160008152602001606081525090565b6040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600081526020016060815260200160608152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610fd982610f90565b810181811067ffffffffffffffff82111715610ff857610ff7610fa1565b5b80604052505050565b600061100b610f72565b90506110178282610fd0565b919050565b600067ffffffffffffffff82111561103757611036610fa1565b5b61104082610f90565b9050602081019050919050565b82818337600083830152505050565b600061106f61106a8461101c565b611001565b90508281526020810184848401111561108b5761108a610f8b565b5b61109684828561104d565b509392505050565b600082601f8301126110b3576110b2610f86565b5b81356110c384826020860161105c565b91505092915050565b6000819050919050565b6110df816110cc565b81146110ea57600080fd5b50565b6000813590506110fc816110d6565b92915050565b6000806040838503121561111957611118610f7c565b5b600083013567ffffffffffffffff81111561113757611136610f81565b5b6111438582860161109e565b9250506020611154858286016110ed565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561119857808201518184015260208101905061117d565b60008484015250505050565b60006111af8261115e565b6111b98185611169565b93506111c981856020860161117a565b6111d281610f90565b840191505092915050565b600060208201905081810360008301526111f781846111a4565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112568261122b565b9050919050565b6112668161124b565b82525050565b6000611278838361125d565b60208301905092915050565b6000602082019050919050565b600061129c826111ff565b6112a6818561120a565b93506112b18361121b565b8060005b838110156112e25781516112c9888261126c565b97506112d483611284565b9250506001810190506112b5565b5085935050505092915050565b600060208201905081810360008301526113098184611291565b905092915050565b61131a816110cc565b82525050565b60006020820190506113356000830184611311565b92915050565b6113448161124b565b811461134f57600080fd5b50565b6000813590506113618161133b565b92915050565b60006020828403121561137d5761137c610f7c565b5b600061138b84828501611352565b91505092915050565b600082825260208201905092915050565b60006113b08261115e565b6113ba8185611394565b93506113ca81856020860161117a565b6113d381610f90565b840191505092915050565b6113e7816110cc565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061142583836113a5565b905092915050565b6000602082019050919050565b6000611445826113ed565b61144f81856113f8565b93508360208202850161146185611409565b8060005b8581101561149d578484038952815161147e8582611419565b94506114898361142d565b925060208a01995050600181019050611465565b50829750879550505050505092915050565b600060608301600083015184820360008601526114cc82826113a5565b91505060208301516114e160208601826113de565b50604083015184820360408601526114f9828261143a565b9150508091505092915050565b6000602082019050818103600083015261152081846114af565b905092915050565b60006020828403121561153e5761153d610f7c565b5b600082013567ffffffffffffffff81111561155c5761155b610f81565b5b6115688482850161109e565b91505092915050565b60006020828403121561158757611586610f7c565b5b6000611595848285016110ed565b91505092915050565b600060e0830160008301516115b6600086018261125d565b50602083015184820360208601526115ce82826113a5565b915050604083015184820360408601526115e882826113a5565b91505060608301516115fd60608601826113de565b506080830151848203608086015261161582826113a5565b91505060a083015184820360a086015261162f82826113a5565b91505060c083015161164460c08601826113de565b508091505092915050565b60006020820190508181036000830152611669818461159e565b905092915050565b6000819050919050565b600061169661169161168c8461122b565b611671565b61122b565b9050919050565b60006116a88261167b565b9050919050565b60006116ba8261169d565b9050919050565b6116ca816116af565b82525050565b60006020820190506116e560008301846116c1565b92915050565b600082825260208201905092915050565b6000611707826113ed565b61171181856116eb565b93508360208202850161172385611409565b8060005b8581101561175f57848403895281516117408582611419565b945061174b8361142d565b925060208a01995050600181019050611727565b50829750879550505050505092915050565b6000602082019050818103600083015261178b81846116fc565b905092915050565b600080600080600060a086880312156117af576117ae610f7c565b5b600086013567ffffffffffffffff8111156117cd576117cc610f81565b5b6117d98882890161109e565b955050602086013567ffffffffffffffff8111156117fa576117f9610f81565b5b6118068882890161109e565b945050604086013567ffffffffffffffff81111561182757611826610f81565b5b6118338882890161109e565b9350506060611844888289016110ed565b925050608086013567ffffffffffffffff81111561186557611864610f81565b5b6118718882890161109e565b9150509295509295909350565b600081905092915050565b60006118948261115e565b61189e818561187e565b93506118ae81856020860161117a565b80840191505092915050565b60006118c68284611889565b915081905092915050565b600081905092915050565b50565b60006118ec6000836118d1565b91506118f7826118dc565b600082019050919050565b600061190d826118df565b9150819050919050565b7f636f727265637420616d6f756e74206f66206574686572206e6f742073656e74600082015250565b600061194d602083611169565b915061195882611917565b602082019050919050565b6000602082019050818103600083015261197c81611940565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806119ca57607f821691505b6020821081036119dd576119dc611983565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611a457fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611a08565b611a4f8683611a08565b95508019841693508086168417925050509392505050565b6000611a82611a7d611a78846110cc565b611671565b6110cc565b9050919050565b6000819050919050565b611a9c83611a67565b611ab0611aa882611a89565b848454611a15565b825550505050565b600090565b611ac5611ab8565b611ad0818484611a93565b505050565b5b81811015611af457611ae9600082611abd565b600181019050611ad6565b5050565b601f821115611b3957611b0a816119e3565b611b13846119f8565b81016020851015611b22578190505b611b36611b2e856119f8565b830182611ad5565b50505b505050565b600082821c905092915050565b6000611b5c60001984600802611b3e565b1980831691505092915050565b6000611b758383611b4b565b9150826002028217905092915050565b611b8e8261115e565b67ffffffffffffffff811115611ba757611ba6610fa1565b5b611bb182546119b2565b611bbc828285611af8565b600060209050601f831160018114611bef5760008415611bdd578287015190505b611be78582611b69565b865550611c4f565b601f198416611bfd866119e3565b60005b82811015611c2557848901518255600182019150602085019450602081019050611c00565b86831015611c425784890151611c3e601f891682611b4b565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c91826110cc565b9150611c9c836110cc565b9250828202611caa816110cc565b91508282048414831517611cc157611cc0611c57565b5b5092915050565b600069ffffffffffffffffffff82169050919050565b611ce781611cc8565b8114611cf257600080fd5b50565b600081519050611d0481611cde565b92915050565b6000819050919050565b611d1d81611d0a565b8114611d2857600080fd5b50565b600081519050611d3a81611d14565b92915050565b600081519050611d4f816110d6565b92915050565b600080600080600060a08688031215611d7157611d70610f7c565b5b6000611d7f88828901611cf5565b9550506020611d9088828901611d2b565b9450506040611da188828901611d40565b9350506060611db288828901611d40565b9250506080611dc388828901611cf5565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611e0a826110cc565b9150611e15836110cc565b925082611e2557611e24611dd0565b5b82820490509291505056fea264697066735822122034ffd14d18a1c3aea668ce0254f6d09e72d25dec4c5c674e92ea987668dd6ef564736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 54,
        "contract": "contracts/Library.sol:Library",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 57,
        "contract": "contracts/Library.sol:Library",
        "label": "allAuthors",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 110,
        "contract": "contracts/Library.sol:Library",
        "label": "authorMapping",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_struct(Author)90_storage)"
      },
      {
        "astId": 115,
        "contract": "contracts/Library.sol:Library",
        "label": "bookMapping",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Book)105_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(Author)90_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Library.Author)",
        "numberOfBytes": "32",
        "value": "t_struct(Author)90_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Book)105_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct Library.Book)",
        "numberOfBytes": "32",
        "value": "t_struct(Book)105_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Author)90_storage": {
        "encoding": "inplace",
        "label": "struct Library.Author",
        "members": [
          {
            "astId": 84,
            "contract": "contracts/Library.sol:Library",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 86,
            "contract": "contracts/Library.sol:Library",
            "label": "joinDate",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 89,
            "contract": "contracts/Library.sol:Library",
            "label": "bookCidArray",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_string_storage)dyn_storage"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Book)105_storage": {
        "encoding": "inplace",
        "label": "struct Library.Book",
        "members": [
          {
            "astId": 92,
            "contract": "contracts/Library.sol:Library",
            "label": "theAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 94,
            "contract": "contracts/Library.sol:Library",
            "label": "title",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 96,
            "contract": "contracts/Library.sol:Library",
            "label": "description",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 98,
            "contract": "contracts/Library.sol:Library",
            "label": "uploadDate",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 100,
            "contract": "contracts/Library.sol:Library",
            "label": "bookCid",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 102,
            "contract": "contracts/Library.sol:Library",
            "label": "coverCid",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          },
          {
            "astId": 104,
            "contract": "contracts/Library.sol:Library",
            "label": "priceInEth",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}