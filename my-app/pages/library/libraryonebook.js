import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import { ConnectButton } from "@rainbow-me/rainbowkit";
import { RESEARCH_CONTRACT_ADDRESS, abi, LIBRARY_CONTRACT_ADDRESS, libraryAbi } from "../../constants";
import { Contract, providers, utils, BigNumber, Signer, ethers } from "ethers";

import {
  useAccount,
  useProvider,
  useContractRead,
  useConnect,
  usePrepareContractWrite,
  useContractWrite,
  useContractEvent,
  useContract,
  useSwitchNetwork,
  useNetwork,
  useSigner
} from "wagmi";
import { useConnectModal } from "@rainbow-me/rainbowkit";
import { useEffect, useState } from "react";

const inter = Inter({ subsets: ["latin"] });
// if (account!=null){
// }

export default function Home() {
    const { chain } = useNetwork()
    const { chains, error, pendingChainId, switchNetwork,  } = useSwitchNetwork()
    
    const [theChain, setTheChain] = useState("")
    const [title, setTitle] = useState("")
    const [price, setPrice] = useState("")
    
    console.log(chain)
    const provider = useProvider()
    const {data:signer} = useSigner()
    useEffect(()=>{
        if(chain){
            if(chain.id!=5){
        switchNetwork?.(5)
            }
        }
    },[chains, chain])

    useEffect(()=>{
        async function bookViewer(){
            try {
            const theAuthor = await contract.viewAuthor(address)
            const theCid = theAuthor.bookCidArray[0]
            console.log(theCid)
            const theBook = await contract.viewBook(theCid)
            console.log(theBook)

            const thePrice = ethers.utils.formatEther(theBook.priceInEth)
            const checker = Number(theBook.priceInEth._hex)
            console.log(checker)
            console.log(thePrice)
            setPrice(thePrice)
            } catch (error) {
              console.error(error)

            }
        }
        bookViewer()
    },[])

    
    const { address, isConnecting, isDisconnected, isConnected } = useAccount();
    


    const [alreadyMember, setAlreadyMember] = useState(false);
    const { connect, connectors, isLoading, pendingConnector } = useConnect();
    
    const viewMyAddress =()=>{
        console.log(address)
      }

  const contract = useContract({
    address:LIBRARY_CONTRACT_ADDRESS,
    abi: libraryAbi,
    signerOrProvider:signer||provider
  })




  return (
    <>
      <Head>
        <title>Samarth Ki Branch hai </title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="bg-black border-2 border-red-600 h-[100vh] text-white">
        <div>{"Hello " + "!"}</div>

        <div className="bg-black mt-4 mb-4 ml-4">
          <ConnectButton
            accountStatus={{
              smallScreen: "avatar",
              largeScreen: "full",
            }}
            showBalance={{
              smallScreen: false,
              largeScreen: true,
            }}
          />
        </div>

        <div className="font-extralight ml-4">
            <div>{price}</div>



        </div>
      </main>
    </>
  );
}
